version: '3'
services:
    web:
        image: nginx:alpine
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "./web/TastyIgniter:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8008:80"
            - "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
            #- APP_URL=https://tasty.example.com
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        # image: nanoninja/php-fpm:${PHP_VERSION}
        env_file:
            - ".env"
        build: 
            context: ./docker-files
            dockerfile: Dockerfile.php_service
            args:
                PHP_VERSION: ${PHP_VERSION}
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            # - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php-cli.ini"
            - "./web/TastyIgniter:/var/www/html"
        environment:
            #- APP_URL=https://tasty.example.com
            - APP_URL=
            - APP_DEBUG=true
            - DB_CONNECTION=mysql
            - DB_HOST=${MYSQL_HOST}
            - DB_DATABASE=${MYSQL_DATABASE}
            - DB_USERNAME=${MYSQL_USER}
            - DB_PASSWORD=${MYSQL_PASSWORD}
            #- CACHE_DRIVER=redis
            #- REDIS_HOST=redis
# composer:
#     build:
#         context: ./docker-files
#         dockerfile: Dockerfile.composer_service
#     volumes:
#         - "./web/TastyIgniter:/app"
#     command: install
# myadmin:
#     image: phpmyadmin/phpmyadmin
#     container_name: phpmyadmin
#     ports:
#         - "8080:80"
#     environment:
#         - PMA_ARBITRARY=1
#         - PMA_HOST=${MYSQL_HOST}
#     restart: always
#     depends_on:
#         - mysqldb
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
    # redis:
    #     image: redis:6
    #     command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    #     restart: always